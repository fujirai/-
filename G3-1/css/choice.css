/* 全体設定 */
html, body {
    height: 100%;
    width: 100%;
    margin: 0;
    padding: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: #f0f0f0;
    overflow: hidden;
}

/* 背景画像 */
.scene-image {
    width: 100vw;
    height: 100vh;
    position: fixed;
    top: 0;
    left: 0;
    z-index: -1;
}
.scene-img{
    width: 100vw;
    height: 100vh;
    object-fit: cover;
    object-fit: cover;
}

/* ポップアップ */
.popup {
    position: fixed;
    top: 40%;
    left: -300px;
    transform: translateY(-50%);
    width: 300px;
    padding: 20px;
    background-color: #e0f7fa;
    color: #000;
    border: none;
    border-radius: 5px;
    text-align: center;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
    transition: left 0.3s ease;
    cursor: pointer;
}

.popup.show {
    left: 0;
    background-color: #f1f1f1;
    color: #000;
    border: 1px solid #ccc;
}

/* フッターボックス */
.footer-box {
    position: fixed;
    bottom: 0;
    width: 100%;
    height: 150px;
    overflow: auto;
    background: rgba(0, 0, 0, 0.7);
    border: 2px solid #fff;
    border-radius: 10px;
    padding: 20px;
    box-sizing: border-box;
    box-shadow: 0 0 15px rgba(255, 255, 255, 0.5);
    /* text-align: center; */
}

.footer-box h2 {
    margin: 0;
    font-size: 1.2em;
    color: #fff;
    line-height: 1.6;
    text-shadow: 1px 1px 2px #000;
    overflow: hidden;
    display: inline-block;
    animation: blink 0.5s step-end infinite;
}

/* タイピングアニメーション */
@keyframes blink {
    50% {
        border-color: transparent;
    }
}

/* ステータスの文字 */
.rotate-text {
    writing-mode: vertical-lr;
    text-orientation: upright;
    position: absolute;
    right: 0;
    padding-right: 5px;
}

/* 選択肢ボタン */
.options {
    position: fixed;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    display: flex;
    flex-direction: column;
    align-items: center;
    opacity: 0;
    transition: opacity 1s;
    z-index: 9999;
}

/* ボタンの共通スタイル */
button.option-button {
    overflow: hidden;
    padding: 1.5rem 6rem;
    color: #fff;
    background: #000;
    cursor: pointer;
    position: relative;
    margin:2px;
  }
  
  button.option-button span {
    position: relative;
    z-index: 1; /* 背景より上に表示するため */
  }
  
  button.option-button:before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: #e47979;
    z-index: 0; /* テキストの下に配置 */
    transition: all 0.5s ease-in-out;
    transform: translateX(-96%);
  }
  
  button.option-button:hover:before {
    transform: translateX(0%);
  }
  

/* イベントタイトル */
.fixed-title {
    position: absolute;
    top: 0;
    left: 0;
    background-color: rgba(0, 0, 0, 0.7);
    color: white;
    border: 1.5px solid #fff;
    text-align: center;
    font-size: 16px;
    border-radius: 20px;
}

.event-title {
    margin: 10px 5px;
}

/* ゲームボタン */
/* ボタン全体のスタイル */
button.game-button {
    position: relative; /* 擬似要素の基準として必要 */
    overflow: hidden;
    padding: 1.5rem 6rem;
    color: #fff;
    background: #000;
    border: none; /* デフォルトのボーダーを削除 */
    border-radius: 0;
    cursor: pointer;
    z-index: 0;
    text-align: center;
    font-size: 1rem;
    box-sizing: border-box;
  }
  
  /* テキスト部分のスタイル */
  button.game-button span {
    position: relative;
    z-index: 1; /* 擬似要素より上に表示 */
    pointer-events: none; /* テキストをクリック不可にして干渉を防ぐ */
  }
  
  /* ホバーエフェクトのスタイル（左から右） */
  button.game-button:before {
    position: absolute;
    top: 0;
    left: calc(-100% + 10px);
    width: 100%;
    height: 100%;
    content: '';
    background: #094;
    transition: all 0.5s ease-in-out;
    transform: translateX(0) translateY(0);
    z-index: -1;
  }
  
  /* ホバーエフェクトのスタイル（右から左） */
  button.game-button:after {
    position: absolute;
    top: 0;
    right: calc(-100% + 10px);
    width: 100%;
    height: 100%;
    content: '';
    background: #094;
    transition: all 0.5s ease-in-out;
    transform: translateX(0) translateY(0);
    z-index: -1;
  }
  
  /* ホバー時の効果 */
  button.game-button:hover:before {
    transform: translateX(50%) translateY(0);
  }
  
  button.game-button:hover:after {
    transform: translateX(-50%) translateY(0);
  }
  
  

/* ボタンコンテナ */
.modo, .nextTermButton {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-top: 20px;
}

@keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

#modo, #nextTermButton {
    animation: fadeIn 1s ease-in-out;
}